# Generated by Django 5.2.4 on 2025-08-18 13:57

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('media_features', '0011_supportingdocument_submitter'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_code', models.CharField(choices=[('TVL', 'TVL - technical, vocational, livelihood'), ('AE', 'AE - agricultural and environmental trainings'), ('CE', 'CE - continuing education for professionals'), ('BE', 'BE - basic education'), ('GAD', 'GAD - Gender and Development'), ('O', 'O - others')], max_length=50, primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'db_table': 'tblTrainingCategory',
            },
        ),
        migrations.CreateModel(
            name='CollaboratingAgency',
            fields=[
                ('agency_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Name of Partner Agency')),
            ],
            options={
                'verbose_name_plural': 'Collaborating Agencies',
                'db_table': 'tblCollaboratingAgency',
            },
        ),
        migrations.CreateModel(
            name='LeadUnit',
            fields=[
                ('lead_unit_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Lead Unit',
                'verbose_name_plural': 'Lead Units',
                'db_table': 'tblLeadUnit',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('project_no', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('project_title', models.CharField(max_length=500, verbose_name='Project Title')),
            ],
            options={
                'db_table': 'tblProject',
            },
        ),
        migrations.CreateModel(
            name='ThematicArea',
            fields=[
                ('area_code', models.CharField(choices=[('A', 'A- Agri-Fisheries and Food Security'), ('B', 'B-Biodiversity and Environmental Conservation'), ('C', 'C-Smart Engineering, ICT and Industrial Competitiveness'), ('D', 'D-Public Health and Welfare'), ('E', 'E-Societal Development and Equality')], max_length=50, primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Thematic Areas',
                'db_table': 'tblThematicArea',
            },
        ),
        migrations.CreateModel(
            name='ContactPerson',
            fields=[
                ('contact_person_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('number_email', models.CharField(max_length=255, verbose_name='Number/Email')),
                ('role', models.CharField(help_text='e.g., Training Coordinator', max_length=100)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact_persons', to='media_features.department')),
            ],
            options={
                'verbose_name_plural': 'Contact Persons',
                'db_table': 'tblContactPerson',
            },
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('TrainingNo', models.AutoField(primary_key=True, serialize=False)),
                ('Code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Code (c/o Extension Services)')),
                ('TitleOfTraining', models.CharField(max_length=500)),
                ('InclusiveDates', models.CharField(max_length=255, verbose_name='Inclusive Dates')),
                ('Venue', models.CharField(max_length=255)),
                ('contact_person', models.CharField(blank=True, max_length=255, null=True, verbose_name='Contact Person')),
                ('contact_number_email', models.CharField(blank=True, max_length=255, null=True, verbose_name='Number/Email')),
                ('related_curricular_offering', models.CharField(max_length=500, verbose_name='Related Curricular Offering (e.g. BS Agriculture)')),
                ('total_male', models.IntegerField(default=0, verbose_name='Male')),
                ('total_female', models.IntegerField(default=0, verbose_name='Female')),
                ('total_prefer_no_to_say', models.IntegerField(default=0, verbose_name='Prefer not to say')),
                ('Total_participants_by_sex', models.IntegerField(default=0, editable=False)),
                ('student_count', models.IntegerField(default=0, verbose_name='Student')),
                ('farmer_count', models.IntegerField(default=0, verbose_name='Farmer')),
                ('fisherfolk_count', models.IntegerField(default=0, verbose_name='Fisherfolk')),
                ('ag_technician_count', models.IntegerField(default=0, verbose_name='Ag Technician')),
                ('government_employee_count', models.IntegerField(default=0, verbose_name='Government Employee')),
                ('private_employee_count', models.IntegerField(default=0, verbose_name='Private Employee')),
                ('fourps_count', models.IntegerField(default=0, verbose_name='4Ps')),
                ('others_count', models.IntegerField(default=0, verbose_name='Others')),
                ('Total_participants_by_category', models.IntegerField(default=0, editable=False)),
                ('solo_parent_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='No. of participants who are solo parent')),
                ('fourps_members_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='No. of participants who are 4Ps members')),
                ('pwd_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='No. of participants with disabilities')),
                ('type_of_disability', models.CharField(blank=True, max_length=255, null=True, verbose_name='Type of disability')),
                ('TotalNoOfPersonsTrained', models.IntegerField(default=0, verbose_name='Total No. of Persons Trained')),
                ('Number_of_days_trained', models.CharField(choices=[('5+', '5 or more days (x 2.00)'), ('3-4', '3 to 4 days (x 1.5)'), ('2', '2 days (x 1.25)'), ('1', '1 day (8 hours) (x 1.00)'), ('less_1', 'Less than 1 day or 8 hours (x 0.5)')], max_length=20, verbose_name='Number of days trained radio buttons')),
                ('Number_of_days_trained_weight', models.FloatField(editable=False, verbose_name='Number of days trained per weight of training')),
                ('TotalNoOfTraineesSurveyed', models.IntegerField(default=0)),
                ('ClientRatingRelevance', models.IntegerField(blank=True, null=True, verbose_name="Client's rating on the training (relevance)")),
                ('ClientRatingQuality', models.IntegerField(blank=True, null=True, verbose_name="Client's rating on the training (quality)")),
                ('ClientRatingTimeliness', models.IntegerField(blank=True, null=True, verbose_name="Client's rating on the training (timeliness)")),
                ('TotalNumberofClientsRequestingTrainings', models.IntegerField(default=0)),
                ('TotalNumberofRequestsResponded', models.IntegerField(default=0)),
                ('sustainable_development_goal', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sustainable Development Goal')),
                ('remarks', models.TextField(blank=True, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='media_features.category')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='media_features.department', verbose_name='Lead Unit Department/Unit')),
                ('lead_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='media_features.leadunit')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='media_features.project', verbose_name='Project No.')),
                ('thematic_area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='media_features.thematicarea')),
            ],
            options={
                'verbose_name_plural': 'Trainings',
                'db_table': 'tblTraining',
            },
        ),
        migrations.AddField(
            model_name='supportingdocument',
            name='training',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supporting_documents', to='media_features.training'),
        ),
        migrations.CreateModel(
            name='TrainingCollaboratingAgency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_charged_to_cvsu', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Amount charged to CvSU')),
                ('amount_charged_to_partner', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Amount charged to partner agency')),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='media_features.collaboratingagency')),
                ('training', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='media_features.training')),
            ],
            options={
                'db_table': 'tblTrainingCollaboratingAgency',
                'unique_together': {('training', 'agency')},
            },
        ),
    ]
