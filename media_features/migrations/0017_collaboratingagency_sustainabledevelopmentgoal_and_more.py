# Generated by Django 5.2.5 on 2025-08-23 12:52

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('media_features', '0016_auto_20250819_0957'),
    ]

    operations = [
        migrations.CreateModel(
            name='CollaboratingAgency',
            fields=[
                ('agency_id', models.AutoField(primary_key=True, serialize=False)),
                ('agency_name', models.CharField(max_length=255)),
                ('contact_person', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name_plural': 'Collaborating Agencies',
                'db_table': 'tblCollaboratingAgency',
                'ordering': ['agency_name'],
            },
        ),
        migrations.CreateModel(
            name='SustainableDevelopmentGoal',
            fields=[
                ('sdg_id', models.AutoField(primary_key=True, serialize=False)),
                ('sdg_number', models.IntegerField(unique=True)),
                ('sdg_title', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'tblSustainableDevelopmentGoal',
                'ordering': ['sdg_number'],
            },
        ),
        migrations.CreateModel(
            name='ThematicArea',
            fields=[
                ('thematic_area_id', models.AutoField(primary_key=True, serialize=False)),
                ('thematic_code', models.CharField(choices=[('A', 'Agri-Fisheries and Food Security'), ('B', 'Biodiversity and Environmental Conservation'), ('C', 'Smart Engineering, ICT and Industrial Competitiveness'), ('D', 'Public Health and Welfare'), ('E', 'Societal Development and Equality')], max_length=10, unique=True)),
                ('thematic_name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Thematic Areas',
                'db_table': 'tblThematicArea',
            },
        ),
        migrations.CreateModel(
            name='TrainingCategory',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('category_code', models.CharField(choices=[('TVL', 'Technical, Vocational, Livelihood'), ('AE', 'Agricultural and Environmental Trainings'), ('CE', 'Continuing Education for Professionals'), ('BE', 'Basic Education'), ('GAD', 'Gender and Development'), ('O', 'Others')], max_length=10, unique=True)),
                ('category_name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Training Categories',
                'db_table': 'tblTrainingCategory',
            },
        ),
        migrations.AlterField(
            model_name='otheractivities',
            name='category',
            field=models.CharField(choices=[('MEETING', 'Meeting'), ('WORKSHOP', 'Workshop'), ('PLANNING', 'Planning'), ('CAPACITY_BUILDING', 'Capacity Building for Extensionists'), ('COMMUNITY_OUTREACH_ACTIVITY', 'Community Outreach Activity'), ('OTHER', 'Other')], max_length=50),
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('training_id', models.AutoField(primary_key=True, serialize=False)),
                ('training_no', models.CharField(max_length=50, unique=True, verbose_name='Training No.')),
                ('extension_code', models.CharField(max_length=50, verbose_name='Code (c/o Extension Services)')),
                ('contact_person', models.CharField(max_length=255, verbose_name='Contact Person')),
                ('contact_number_email', models.CharField(max_length=255, verbose_name='Number/Email')),
                ('training_coordinator', models.CharField(max_length=255, verbose_name='Training Coordinator')),
                ('project_no', models.CharField(blank=True, max_length=50, null=True, verbose_name='Project No.')),
                ('title', models.CharField(max_length=500, verbose_name='Title of Training')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
                ('venue', models.CharField(max_length=500, verbose_name='Venue')),
                ('male_participants', models.IntegerField(default=0, verbose_name='Male Participants')),
                ('female_participants', models.IntegerField(default=0, verbose_name='Female Participants')),
                ('prefer_not_to_say_participants', models.IntegerField(default=0, verbose_name='Prefer Not To Say')),
                ('student_participants', models.IntegerField(default=0, verbose_name='Student Participants')),
                ('farmer_participants', models.IntegerField(default=0, verbose_name='Farmer Participants')),
                ('fisherfolk_participants', models.IntegerField(default=0, verbose_name='Fisherfolk Participants')),
                ('ag_technician_participants', models.IntegerField(default=0, verbose_name='Ag Technician Participants')),
                ('government_employee_participants', models.IntegerField(default=0, verbose_name='Government Employee Participants')),
                ('private_employee_participants', models.IntegerField(default=0, verbose_name='Private Employee Participants')),
                ('four_ps_participants', models.IntegerField(default=0, verbose_name="4P's Participants")),
                ('other_participants', models.IntegerField(default=0, verbose_name='Other Participants')),
                ('solo_parent_participants', models.IntegerField(default=0, verbose_name='Solo Parent Participants (TVL only)')),
                ('four_ps_members', models.IntegerField(default=0, verbose_name="4P's Members (TVL only)")),
                ('participants_with_disabilities', models.IntegerField(default=0, verbose_name='Participants with Disabilities (TVL only)')),
                ('training_duration', models.CharField(choices=[('5_plus', '5 or more days (x2.00)'), ('3_to_4', '3 to 4 days (x1.5)'), ('2_days', '2 days (x1.25)'), ('1_day', '1 day (8 hours) (x1.00)'), ('less_than_1', 'Less than 1 day or 8 hours (x0.5)')], max_length=20, verbose_name='Number of Days Trained')),
                ('total_trainees_surveyed', models.IntegerField(verbose_name='Total No. Of Trainees Surveyed')),
                ('relevance_rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], verbose_name="Client's Rating on Training Relevance")),
                ('quality_rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], verbose_name="Client's Rating on Training Quality")),
                ('timeliness_rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], verbose_name="Client's Rating on Training Timeliness")),
                ('total_clients_requesting', models.IntegerField(verbose_name='Total No. of Clients Requesting Trainings')),
                ('requests_responded_3_days', models.IntegerField(verbose_name='Requests Responded in Next 3 Days')),
                ('amount_charged_cvsu', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Amount Charged to CvSU')),
                ('amount_charged_partner', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Amount Charged to Partner Agency')),
                ('partner_agency_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name of Partner Agency')),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='Remarks')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('collaborating_agencies', models.ManyToManyField(blank=True, to='media_features.collaboratingagency', verbose_name='Collaborating Agencies')),
                ('curricular_offerings', models.ManyToManyField(blank=True, to='media_features.curricularoffering', verbose_name='Curricular Offerings')),
                ('lead_department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='led_trainings', to='media_features.department', verbose_name='Lead Department')),
                ('sustainable_development_goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='media_features.sustainabledevelopmentgoal', verbose_name='Sustainable Development Goal')),
                ('thematic_area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='media_features.thematicarea', verbose_name='Thematic Area')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='media_features.trainingcategory', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Training',
                'verbose_name_plural': 'Trainings',
                'db_table': 'tblTraining',
                'ordering': ['-start_date', 'training_no'],
            },
        ),
        migrations.AddField(
            model_name='supportingdocument',
            name='training',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supporting_documents', to='media_features.training'),
        ),
    ]
